{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/todo/src/App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      new_ToDo_Item: \" \"\n    };\n  } //incorporating local storage \n\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n\n    window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key); // parse the localStorage string and setState\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          // handle empty string\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  update_new_to_do_item(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  add_new_item() {\n    const new_ToDo_Item = {\n      id: 1 + Math.random(),\n      value: this.state.new_ToDo_Item\n    };\n    const list = [...this.state.list, new_ToDo_Item];\n    this.setState({\n      list,\n      new_ToDo_Item: \"\"\n    });\n  }\n\n  delete_item(id) {\n    const list = [...this.state.list];\n    const newlist = list.filter(item => item.id !== id);\n    this.setState({\n      list: newlist,\n      new_ToDo_Item: \"\"\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"app-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"ToDo List\"), React.createElement(\"div\", {\n      className: \"Container\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), \"add an item\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"what do you want toDo \\uD83D\\uDE0A ?\",\n      type: \"text\",\n      id: \"item2\",\n      value: this.state.new_ToDo_Item,\n      onChange: e => this.update_new_to_do_item(\"new_ToDo_Item\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.add_new_item(),\n      disabled: !this.state.new_ToDo_Item.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.list.map((item, index) => {\n      console.log(item);\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, item.value, React.createElement(\"button\", {\n        className: \"btn btn-floating\",\n        onClick: () => this.delete_item(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"x\")));\n    }))));\n  }\n\n} // ReactDOM.render(<App />, document.getElementById('root'));\n\n{\n  /* export default App; */\n}","map":{"version":3,"sources":["/Users/user/Desktop/todo/src/App.js"],"names":["React","Component","App","constructor","props","state","list","new_ToDo_Item","componentDidMount","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","componentWillUnmount","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","update_new_to_do_item","add_new_item","id","Math","random","delete_item","newlist","filter","item","render","console","log","target","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AAGA,OAAO,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAOD,GAZgC,CAyBnC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,4BAAL,GADkB,CAGlB;AACA;;AACAC,IAAAA,MAAM,CAACC,gBAAP,CACE,cADF,EAEE,KAAKC,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAFF;AAID;;AAMDC,EAAAA,oBAAoB,GAAG;AACrBJ,IAAAA,MAAM,CAACK,mBAAP,CACE,cADF,EAEE,KAAKH,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAFF,EADqB,CAMrB;;AACA,SAAKD,uBAAL;AACD;;AAEDH,EAAAA,4BAA4B,GAAG;AAC7B;AACA,SAAK,IAAIO,GAAT,IAAgB,KAAKX,KAArB,EAA4B;AAC1B;AACA,UAAIY,YAAY,CAACC,cAAb,CAA4BF,GAA5B,CAAJ,EAAsC;AACpC;AACA,YAAIG,KAAK,GAAGF,YAAY,CAACG,OAAb,CAAqBJ,GAArB,CAAZ,CAFoC,CAIpC;;AACA,YAAI;AACFG,UAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAR;AACA,eAAKI,QAAL,CAAc;AAAE,aAACP,GAAD,GAAOG;AAAT,WAAd;AACD,SAHD,CAGE,OAAOK,CAAP,EAAU;AACV;AACA,eAAKD,QAAL,CAAc;AAAE,aAACP,GAAD,GAAOG;AAAT,WAAd;AACD;AACF;AACF;AACF;;AAEDP,EAAAA,uBAAuB,GAAG;AACxB;AACA,SAAK,IAAII,GAAT,IAAgB,KAAKX,KAArB,EAA4B;AAC1B;AACAY,MAAAA,YAAY,CAACQ,OAAb,CAAqBT,GAArB,EAA0BK,IAAI,CAACK,SAAL,CAAe,KAAKrB,KAAL,CAAWW,GAAX,CAAf,CAA1B;AACD;AACF;;AA+BCW,EAAAA,qBAAqB,CAACX,GAAD,EAAMG,KAAN,EAAa;AAEhC,SAAKI,QAAL,CAAc;AACZ,OAACP,GAAD,GAAOG;AADK,KAAd;AAID;;AAGDS,EAAAA,YAAY,GAAG;AAEb,UAAMrB,aAAa,GAAG;AACpBsB,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADY;AAEpBZ,MAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWE;AAFE,KAAtB;AAKA,UAAMD,IAAI,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,EAAqBC,aAArB,CAAb;AAEA,SAAKgB,QAAL,CAAc;AACZjB,MAAAA,IADY;AAEZC,MAAAA,aAAa,EAAE;AAFH,KAAd;AAKD;;AAEDyB,EAAAA,WAAW,CAACH,EAAD,EAAK;AAEd,UAAMvB,IAAI,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,CAAb;AAEA,UAAM2B,OAAO,GAAG3B,IAAI,CAAC4B,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhC,CAAhB;AAEA,SAAKN,QAAL,CAAc;AACZjB,MAAAA,IAAI,EAAE2B,OADM;AAEZ1B,MAAAA,aAAa,EAAE;AAFH,KAAd;AAKD;;AAMD6B,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjC,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AACE,MAAA,KAAK,EAAE,EADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,iBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AACE,MAAA,WAAW,EAAC,sCADd;AAGE,MAAA,IAAI,EAAC,MAHP;AAKE,MAAA,EAAE,EAAC,OALL;AAOE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWE,aAPpB;AASE,MAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKG,qBAAL,CAA2B,eAA3B,EAA4CH,CAAC,CAACe,MAAF,CAASpB,KAArD,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAsBE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKS,YAAL,EAFjB;AAGE,MAAA,QAAQ,EAAE,CAAC,KAAKvB,KAAL,CAAWE,aAAX,CAAyBiC,MAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACA,MAAA,SAAS,EAAC,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CAtBF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAgCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCR,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnC,KAAL,CAAWC,IAAX,CAAgBmC,GAAhB,CAAoB,CAACN,IAAD,EAAOO,KAAP,KAAiB;AACpCL,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aACE;AAAI,QAAA,GAAG,EAAEO,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IAAI,CAAChB,KADR,EAEE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,MAAM,KAAKa,WAAL,CAAiBG,IAAI,CAACN,EAAtB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CAFF,CADF;AAUD,KAZA,CADH,CAjCF,CAFF,CADF;AAsDD;;AA9MgC,C,CAkNnC;;AACA;AAAC;AAA0B","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n\n      list: [],\n\n      new_ToDo_Item: \" \"\n\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n//incorporating local storage \ncomponentDidMount() {\n  this.hydrateStateWithLocalStorage();\n\n  // add event listener to save state to localStorage\n  // when user leaves/refreshes the page\n  window.addEventListener(\n    \"beforeunload\",\n    this.saveStateToLocalStorage.bind(this)\n  );\n}\n\n\n\n\n\ncomponentWillUnmount() {\n  window.removeEventListener(\n    \"beforeunload\",\n    this.saveStateToLocalStorage.bind(this)\n  );\n\n  // saves if component has a chance to unmount\n  this.saveStateToLocalStorage();\n}\n\nhydrateStateWithLocalStorage() {\n  // for all items in state\n  for (let key in this.state) {\n    // if the key exists in localStorage\n    if (localStorage.hasOwnProperty(key)) {\n      // get the key's value from localStorage\n      let value = localStorage.getItem(key);\n\n      // parse the localStorage string and setState\n      try {\n        value = JSON.parse(value);\n        this.setState({ [key]: value });\n      } catch (e) {\n        // handle empty string\n        this.setState({ [key]: value });\n      }\n    }\n  }\n}\n\nsaveStateToLocalStorage() {\n  // for every item in React state\n  for (let key in this.state) {\n    // save to localStorage\n    localStorage.setItem(key, JSON.stringify(this.state[key]));\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  update_new_to_do_item(key, value) {\n\n    this.setState({\n      [key]: value\n    })\n\n  }\n\n\n  add_new_item() {\n\n    const new_ToDo_Item = {\n      id: 1 + Math.random(),\n      value: this.state.new_ToDo_Item\n    }\n\n    const list = [...this.state.list, new_ToDo_Item]\n\n    this.setState({\n      list,\n      new_ToDo_Item: \"\"\n    })\n\n  }\n\n  delete_item(id) {\n\n    const list = [...this.state.list]\n\n    const newlist = list.filter(item => item.id !== id)\n\n    this.setState({\n      list: newlist,\n      new_ToDo_Item: \"\"\n    })\n\n  }\n\n\n\n\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <h1 className=\"app-title\">ToDo List</h1>\n        <div className=\"Container\" id=\"center\" >\n\n\n          <div\n            style={{\n              \n            }}\n          ></div>\n          add an item\n          <br />\n          <input\n            placeholder=\"what do you want toDo 😊 ?\"\n\n            type=\"text\"\n\n            id=\"item2\"\n\n            value={this.state.new_ToDo_Item}\n\n            onChange={e => this.update_new_to_do_item(\"new_ToDo_Item\", e.target.value)}\n          >\n          </input>\n          <button\n            className=\"add-btn btn-floating\"\n            onClick={() => this.add_new_item()}\n            disabled={!this.state.new_ToDo_Item.length}\n            >\n            \n            <i\n            className=\"material-icons\"\n            >+</i>\n            </button>\n          <br /><br/>\n          <ul>\n            {this.state.list.map((item, index) => {\n              console.log(item);\n              return (\n                <li key={index} >\n                  {item.value}\n                  <button className=\"btn btn-floating\" onClick={() => this.delete_item(item.id)} >\n                  <i className=\"material-icons\">x</i>\n                </button>\n                </li>\n              )\n\n\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n// ReactDOM.render(<App />, document.getElementById('root'));\n{/* export default App; */}\n"]},"metadata":{},"sourceType":"module"}